<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mapper.studentMapper">

    <select id="querystudentBySno" resultType="Student" parameterType="int">
         select * from student where sno = #{sno}
         </select>

    <insert id="addstudent" parameterType="Student">
        insert into student(sno,name,age) values(#{sno},#{name},#{age})
    </insert>

    <update id="updatestudent" parameterType="Student">
        update student set name=#{name},age=#{age} where sno=#{sno}
    </update>

    <delete id="deletestudent" parameterType="int">
        delete from student where sno=#{sno}
    </delete>
    <select id="querystudentall" resultType="Student">
        select * from student
    </select>

    <!--使用转换器
        如果类和表的字段类型能够合理识别 用resulttype 比如类型转换用resultmap
        如果名字字段不一样 也需要用resultmap进行配对
    -->
    <select id="querystudentBySnoWithConverter" resultMap="studentresult" parameterType="int">
         select * from student where sno = #{sno}
         </select>
    <resultMap id="studentresult" type="Student">
        <!--分为主键id 和非主键result-->
        <id property="sno" column="sno" />
        <result property="name" column="name" />
        <result property="age" column="age" />
        <result property="sex" column="sex" typeHandler="BooleanandIntConverter" />
    </resultMap>

    <insert id="addstudentWithConverter" parameterType="Student">
        insert into student(sno,name,age,sex) values(#{sno},#{name},#{age},#{sex,typeHandler=BooleanandIntConverter})
    </insert>

    <select id="querystudentallWithConverter" resultMap="studentallresult">
        select * from student
    </select>
    <resultMap id="studentallresult" type="Student">
        <id property="sno" column="sno"/>
        <result property="name" column="name" />
        <result property="age" column="age" />
        <result property="sex" column="sex" typeHandler="BooleanandIntConverter" />
    </resultMap>
</mapper>